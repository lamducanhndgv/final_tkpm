version: "3"

services:
  api-server:
    image: "lamducanhndgv/tkpm:apiserver"
    container_name: "apiserver"
    restart: "always"
    environment:
      APP_TESTING: 0
      PORT_SERVER_1: 5555
      PORT_SERVER_2: 6666
    networks:
      - tkpm-network
    ports:
      - "0.0.0.0:8888:8888"
    volumes:
      - ${ABSOLUTE DIRECTION OF FOLDER CONTAIN docker-compose.yml}/data:/data # DIRECTION TO FOLDER

  tensorflow-pytorch-opencv-server:
    image: "lamducanhndgv/tkpm:tensorflow_pytorch_opencv"
    container_name: "inferenceserver01"
    restart: "always"
    environment:
      APP_PORT: 5555
    networks:
      - tkpm-network
    volumes:
      - ${ABSOLUTE DIRECTION OF FOLDER CONTAIN docker-compose.yml}/data:/data  # DIRECTION TO FOLDER
      - ${ABSOLUTE DIRECTION OF FOLDER CONTAIN docker-compose.yml}/inference-server:/main  # DIRECTION TO FOLDER
    command: python /main/main.py


  darknet-server:
    image: "lamducanhndgv/tkpm:darknet"
    container_name: "inferenceserver02"
    restart: "always"
    environment:
      APP_PORT: 6666
    networks:
      - tkpm-network
    volumes:
      - ${ABSOLUTE DIRECTION OF FOLDER CONTAIN docker-compose.yml}/data:/data
      - ${ABSOLUTE DIRECTION OF FOLDER CONTAIN docker-compose.yml}/inference-server:/main
    command: python /main/main.py

  mongod:
    image: "mongo:latest"
    container_name: "mongo"
    restart: "always"
    environment:
      MONGO_INITDB_DATABASE: tkpm_final
    networks:
      - tkpm-network
    ports:
      - "27017:27017"

networks:                             # Create network
  tkpm-network:
    driver: bridge
  hostnet:
    external: true
